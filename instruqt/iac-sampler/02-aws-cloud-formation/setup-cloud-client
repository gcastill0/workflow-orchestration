# #!/bin/sh

# # Get the prefix for the naming convention
# export PREFIX="ec2-cli-demo-${RANDY}"

# export LATEST_UR=$(aws ec2 describe-images \
#   --owners 099720109477 \
#   --filters "Name=name,Values=*minimal*hvm-ssd*focal*20*-amd64*2023*" \
#   --query 'sort_by(Images, &CreationDate)[].Name' \
#   | jq -r '.[length-1]')

# # Obtain the AWS AMI ID to create a new EC2 instance
# export IMAGE_ID=$(aws ec2 describe-images \
#   --owners 099720109477 \
#   --filters "Name=name,Values=${LATEST_UR}" \
#   --query 'sort_by(Images, &CreationDate)[].ImageId' \
#   | jq -r '.[]')

# # Obtain the unique ID for the default security group
# export AWS_DEFAULT_SG=$(aws ec2 describe-security-groups \
# --group-name $PREFIX \
# | jq -r '.SecurityGroups[].GroupId')

# # Get the default subnet ID from the last EC2 Instance
# export LATEST_EC2_INSTANCE=$(aws ec2 run-instances \
# --image-id $IMAGE_ID \
# --instance-type t2.micro \
# --associate-public-ip-address \
# --key-name $PREFIX \
# --security-group-ids $AWS_DEFAULT_SG)

# export SUBNET_ID=$(echo $LATEST_EC2_INSTANCE \
#   | jq -r '.Instances | .[].SubnetId')

# # Setup Template
# cat << EOF > /root/EC2_Template.json
# {
# 	"AWSTemplateFormatVersion": "2010-09-09",
# 	"Resources": {
# 		"EC2Instance": {
# 			"Type": "AWS::EC2::Instance",
# 			"Properties": {
# 				"InstanceType": "t2.nano",
# 				"ImageId": "${IMAGE_ID}",
# 				"KeyName": "${PREFIX}",
# 				"NetworkInterfaces": [{
# 					"AssociatePublicIpAddress": "true",
# 					"DeviceIndex": "0",
# 					"GroupSet": ["$AWS_DEFAULT_SG"],
# 					"SubnetId": "${SUBNET_ID}"
# 				}],
# 				"BlockDeviceMappings": [{
# 						"DeviceName": "/dev/sdm",
# 						"Ebs": {
# 							"VolumeType": "io1",
# 							"Iops": "200",
# 							"DeleteOnTermination": "false",
# 							"VolumeSize": "20"
# 						}
# 					},
# 					{
# 						"DeviceName": "/dev/sdk",
# 						"NoDevice": {}
# 					}
# 				]
# 			}
# 		}
# 	},
# 	"Outputs": {
# 		"InstanceId": {
# 			"Description": "InstanceId of the newly created EC2 instance",
# 			"Value": {
# 				"Ref": "EC2Instance"
# 			}
# 		},
# 		"AZ": {
# 			"Description": "Availability Zone of the newly created EC2 instance",
# 			"Value": {
# 				"Fn::GetAtt": ["EC2Instance", "AvailabilityZone"]
# 			}
# 		},
# 		"PublicDNS": {
# 			"Description": "Public DNSName of the newly created EC2 instance",
# 			"Value": {
# 				"Fn::GetAtt": ["EC2Instance", "PublicDnsName"]
# 			}
# 		},
# 		"PublicIP": {
# 			"Description": "Public IP address of the newly created EC2 instance",
# 			"Value": {
# 				"Fn::GetAtt": ["EC2Instance", "PublicIp"]
# 			}
# 		}
# 	}
# }
# EOF